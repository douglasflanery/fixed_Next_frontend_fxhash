import styles from "./PanelHash.module.scss"
import { useContext, useRef, useState } from "react"
import {
  faRotate,
  faTriangleExclamation,
} from "@fortawesome/free-solid-svg-icons"
import { PanelGroup } from "./PanelGroup"
import {
  BaseInput,
  BaseButton,
  IconButton,
} from "components/FxParams/BaseInput"
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome"
import { generateFxHash } from "utils/hash"
import cx from "classnames"
import { useAriaTooltip } from "hooks/useAriaTooltip"
interface Props {
  hash: string
  onChangeHash: (h: string) => void
}

export function PanelHash(props: Props) {
  const { hash, onChangeHash } = props
  const { hoverElement, wasHovered, showTooltip, handleEnter, handleLeave } =
    useAriaTooltip()
  const handleChange = (e: any) => {
    onChangeHash(e.target.value)
  }
  const handleRefresh = () => {
    onChangeHash(generateFxHash())
  }

  return (
    <PanelGroup
      title="Example seed"
      description="The seed is generated by the signing module. Here you can test
      different seeds with your params."
    >
      <div className={styles.hashControls}>
        <BaseInput
          type="text"
          value={hash}
          onChange={handleChange}
          className={styles.hashInput}
        />
        <div className={styles.refreshWrapper}>
          <IconButton onClick={handleRefresh}>
            <FontAwesomeIcon icon={faRotate} />
          </IconButton>
          <div
            onMouseEnter={handleEnter}
            onMouseLeave={handleLeave}
            className={cx(styles.warningWrapper, {
              [styles.wasHovered]: wasHovered,
            })}
          >
            <FontAwesomeIcon
              ref={hoverElement}
              tabIndex={0}
              onFocus={handleEnter}
              onBlur={handleLeave}
              className={styles.warningIcon}
              icon={faTriangleExclamation}
            />
            {showTooltip && (
              <span
                role="tooltip"
                aria-hidden={!showTooltip}
                aria-live="polite"
                className={styles.tooltip}
              >
                The hash is just an example value. Your final piece will be
                minted with a random hash assigned.
              </span>
            )}
          </div>
          <div></div>
        </div>
      </div>
    </PanelGroup>
  )
}
